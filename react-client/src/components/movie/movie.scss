//Movie.tsx
.movie-card {
    position: relative; //allows absolute position for its children
    margin-right: 20px;
    transition: transform 0.3s ease; // for enlargement 
    width: 400px; //movie image width, to follow preview

    // overflow: hidden; //To ensure anything beyond the boundaries isn't visible 

    .movie-title {
        position: absolute; //position bottom left within movie card
        bottom: 5px;
        left: 5px;
        color: white;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7); // Shadow for readability
        z-index: 2; // ensure title appears above other elements on movie card
    }



    &:hover {
        transform: scale(1.1); // Enlarge the movie poster a bit on hover
        z-index: 3;
    }

    .movie-poster {
        // height: 100%;
        width: 100%;
        transition: transform 0.3s ease;
        // object-fit: cover; // ensure the image covers the entire space without distortion with height & width

    }

    // preview on hover
    .movie-preview {
        width: 100%;
        // background-color: rgba(0, 0, 0, 0.7);
        background-color: black;
        color: white; //text
        padding: 10px;
        box-sizing: border-box;
        // display: none; // initially hide preview


        h3 {
            margin-top: 0;
        }

        //paragraph content in the preview
        p {
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
        }
    }

    // current using isHovered state
    // &:hover .movie-preview {
    //     display: block; //show preview when hovered
    // }

    .no-image-placeholder {
        height: 225px; //16:9 aspect ratio
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #e0e0e0;
    }
}


//movie list component
.movie-list-wrapper {
    display: flex;
    align-items: center; //vertically align movies
    position: relative; //relative positioning so absolute children are relative to this


    &:hover .scroll-button {
        opacity: 1; //set scroll button to be visible when hovered

    }

    .scroll-button {
        opacity: 0; //scroll button invisible
        transition: opacity 0.3s ease-in-out;


        position: absolute; //position based .movie-list-wrapper
        top: 50%;
        transform: translateY(-50%); // mid
        background-color: rgba(0, 0, 0, 0.6);
        color: white;
        border: none;
        padding: 10px 15px;
        cursor: pointer;
        z-index: 4;
        margin: 0 16px; //space between the buttons and the movies container

        // slider button hover effect
        &:hover {
            transform: translateY(-50%) scale(1.9); //makes the button 90% larger when hovered
        }

        &.left {
            left: 0;
        }

        &.right {
            right: 0;
        }
    }
}

.movies-container {
    display: flex; //align .movie-card in flex
    overflow-x: auto; //horizontal scrollingwhen the movies exceed the container's width
    padding: 20px 0px 20px 30px;
    scroll-behavior: smooth;
    // flex-grow: 1; //container to takes up all available horizontal space

    // Hides scrollbar for Firefox
    scrollbar-width: none;
    // For Edge
    -ms-overflow-style: none;

    &::-webkit-scrollbar {
        display: none; // Webkit browsers like Chrome and Safari to hide scrollbar
    }
}


//movie grid component
.movie-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); // auto fill w 350px wide minimum

    gap: 16px; // todo: add space horizontally
    padding: 20px;
}